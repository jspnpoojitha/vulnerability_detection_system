package com.incedo.vulnerability_identification_system;
import org.yaml.snakeyaml.Yaml;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Map;

public class VulnerabilityIdentificationSystem {

	public static void main(String[] args) {
		  
        File yamlFile = new File("C://Users//jspn.poojitha//Downloads//vulnerability_identification_system//vulnerability_identification_system/config_pass.yaml");
        Yaml yaml = new Yaml();
        Map<String, Object> yamlMap = null;
        try {
            yamlMap = yaml.load(new FileInputStream(yamlFile));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        
        boolean isVulnerable = checkNestedKeyValue(yamlMap, "password");
        
        if (isVulnerable) {
            System.out.println("The YAML file contains a nested key value pair with the key 'password', which is vulnerable.");
        } else {
            System.out.println("The YAML file does not contain a nested key value pair with the key 'password'.");
        }
    }
    public static boolean checkNestedKeyValue(Map<String, Object> map, String key) {
        for (Map.Entry<String, Object> entry : map.entrySet()) {
            if (entry.getValue() instanceof Map) {
                if (checkNestedKeyValue((Map<String, Object>)entry.getValue(), key)) {
                    return true;
                }
            } else {
                if (entry.getKey().equals(key)) {
                    return true;
                }
            }
        }
        return false;
    }

	}

